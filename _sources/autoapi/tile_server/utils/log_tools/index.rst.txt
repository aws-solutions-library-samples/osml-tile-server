tile_server.utils.log_tools
===========================

.. py:module:: tile_server.utils.log_tools


Attributes
----------

.. autoapisummary::

   tile_server.utils.log_tools._LOG_CONTEXT


Classes
-------

.. autoapisummary::

   tile_server.utils.log_tools.ThreadingLocalContextFilter


Functions
---------

.. autoapisummary::

   tile_server.utils.log_tools.configure_logger


Module Contents
---------------

.. py:data:: _LOG_CONTEXT

.. py:class:: ThreadingLocalContextFilter(attribute_names: List[str])

   Bases: :py:obj:`logging.Filter`


   This is a filter that injects contextual information into the log message. The contextual information is
   set using the static methods of this class.


   .. py:attribute:: attribute_names


   .. py:method:: filter(record: logging.LogRecord) -> bool

      This method is called for each log record. It injects the contextual information into the log record.

      :param record: the log record to filter
      :return: True, this filter does not exclude information from the log



   .. py:method:: set_context(context: Optional[dict]) -> None
      :staticmethod:


      Set the context for the current thread. If None all context information is cleared.

      :param context: dict = the context to set
      :return: None



.. py:function:: configure_logger(logger: logging.Logger, log_level: int, log_formatter: logging.Formatter = None, log_filter: logging.Filter = None) -> None

   Configure a given logger with the provided parameters.

   :param logger: An instance of the Logger to configure
   :param log_level: The log level to set
   :param log_formatter: The log formatter to set on all handlers
   :param log_filter: Log filter to apply to the logger
   :return: None


